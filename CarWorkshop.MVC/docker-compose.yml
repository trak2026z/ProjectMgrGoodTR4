services:
  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=app
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d app"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__CarWorkshop=Host=db;Port=5432;Database=app;Username=app;Password=app
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  migrator:
    build:
      context: .
      dockerfile: Dockerfile.migrator
    working_dir: /src/CarWorkshop.MVC
    volumes:
      - .:/src
    entrypoint: ["dotnet", "ef"]
    command: ["database", "update", "--project", "../CarWorkshop.Infrastructure/CarWorkshop.Infrastructure.csproj", "--startup-project", "CarWorkshop.MVC.csproj"]
    depends_on:
      db:
        condition: service_healthy
    environment:
      - ConnectionStrings__CarWorkshop=Host=db;Port=5432;Database=app;Username=app;Password=app




volumes:
  db-data: {}
